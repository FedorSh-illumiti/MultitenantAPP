{
  "version": 3,
  "file": "userDetails.js",
  "sourceRoot": "",
  "sources": [
    "../../src/handlers/userDetails.ts"
  ],
  "names": [],
  "mappings": ";;;;;AAAA,4DAAmC;AAKnC,MAAqB,WAAW;IAErB,KAAK,CAAC,SAAS,CAAC,GAAO;QAE1B,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAChD,MAAM,YAAY,GAAI,IAAA,oBAAS,EAAC,KAAK,CAAQ,CAAC;QAE9C,OAAO;YACH,KAAK,EAAC,YAAY,CAAC,KAAK;YACxB,UAAU,EAAC,YAAY,CAAC,WAAW;YACnC,SAAS,EAAC,YAAY,CAAC,UAAU;YACjC,SAAS,EAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACzB,QAAQ,EAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;SAElF,CAAA;IAEL,CAAC;CAEJ;AAlBD,8BAkBC",
  "sourcesContent": [
    "import jwtDecode from 'jwt-decode';\nimport { type } from 'os';\nimport { IUserDetails } from 'src/types/service.tscompany1.forecasting';\n\n\nexport default class userDetails {\n\n    public async handleGet(req:any):Promise<IUserDetails>{\n\n        const token = req.req.tokenInfo.getTokenValue();\n        const tokenDecoded =  jwtDecode(token) as any;\n\n        return {\n            email:tokenDecoded.email,\n            familyName:tokenDecoded.family_name,\n            givenName:tokenDecoded.given_name,\n            logonName:req.req.user.id,\n            initials:(tokenDecoded.given_name[0]+tokenDecoded.family_name[0]).toUpperCase()\n\n        }\n\n    }\n\n}"
  ]
}
