{"version":3,"file":"employee.js","sourceRoot":"","sources":["../../../src/db/models/employee.ts"],"names":[],"mappings":";;;;;;AAAA,yCAA4E;AAC5E,8DAA6C;AAa7C,MAAM,QAAS,SAAQ,iBAAwC;CAI9D;AACM,MAAM,QAAQ,GAAG,KAAK,EAAE,QAAiB,EAA4B,EAAE;IAC1E,MAAM,UAAU,GAAG,MAAM,IAAA,gBAAa,EAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,CAAC,IAAI,CACT;QACI,EAAE,EAAE;YACA,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,YAAY,EAAE,kBAAM;YACpB,UAAU,EAAE,IAAI;SACnB;QACD,YAAY,EAAE;YACV,IAAI,EAAE,qBAAS,CAAC,MAAM;SACzB;QACD,UAAU,EAAE;YACR,IAAI,EAAE,qBAAS,CAAC,MAAM;SACzB;KACJ,EACD;QACI,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE,KAAK;QACf,eAAe,EAAE,IAAI;KACxB,CACJ,CAAC;IACF,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACtB,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;AAxBW,QAAA,QAAQ,YAwBnB","sourcesContent":["import { DataTypes, Model, ModelStatic, Optional, UUIDV4 } from \"sequelize\";\nimport getConnection from \"../config/config\";\nimport { getSchemaName } from \"src/utils/dbUtils\";\n\ninterface EmployeeAttributes {\n    id: string;\n    employeename?: string;\n    employeeid?: string;\n}\n\nexport interface EmployeeInput extends Optional<EmployeeAttributes, \"id\"> {}\n\nexport interface EmployeeOuput extends Required<EmployeeAttributes> {}\n\nclass Employee extends Model<EmployeeAttributes, EmployeeInput> implements EmployeeInput {\n    public id!: string;\n    public employeename!: string;\n    public employeeid!: string;\n}\nexport const getModel = async (tenantID?: string): Promise<typeof Employee> => {\n    const connection = await getConnection(tenantID);\n    Employee.init(\n        {\n            id: {\n                type: DataTypes.UUID,\n                defaultValue: UUIDV4,\n                primaryKey: true\n            },\n            employeename: {\n                type: DataTypes.STRING\n            },\n            employeeid: {\n                type: DataTypes.STRING\n            }\n        },\n        {\n            sequelize: connection,\n            paranoid: false,\n            freezeTableName: true\n        }\n    );\n    await Employee.sync();\n    return Employee;\n};\n\n"]}