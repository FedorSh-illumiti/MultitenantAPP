{"version":3,"file":"errorHandling.js","sourceRoot":"","sources":["../../src/utils/errorHandling.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA+B;AAE/B,MAAM,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC;AAEzD,IAAY,QAGX;AAHD,WAAY,QAAQ;IAChB,+CAAa,CAAA;IACb,uCAAS,CAAA;AACb,CAAC,EAHW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAGnB;AAOD,MAAM,QAAS,SAAQ,KAAK;IAOxB,YAAY,IAAa,EAAE,YAAoB,EAAE,OAAe;QAC5D,KAAK,CAAC,OAAO,CAAC,CAAC;QANX,QAAG,GAAS;YAChB,OAAO,EAAC,EAAE;YACV,IAAI,EAAC,QAAQ,CAAC,GAAG;SACpB,CAAC;QAME,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,IAAI,YAAY,EAAC;YACb,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACjE;aACI,IAAI,OAAO,EAAE;YACd,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;SAC9B;IAEH,CAAC;IAEI,aAAa;QAChB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,cAAc,EAAE,eAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACvF,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,iBAAiB,CAAC,GAAO;QAC5B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,GAAO,EAAC,KAAW;QAC/C,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;CAEJ;AAED,kBAAe,QAAQ,CAAC","sourcesContent":["import LocCache from \"./cache\";\n\nconst TextBundle = require(\"@sap/textbundle\").TextBundle;\n\nexport enum MsgTypes {\n    Backend = 490,\n    BTP = 491\n}\n\ntype MsgType = {\n    message:string,\n    type: MsgTypes\n}\n\nclass ErrorHnd extends Error {\n    \n    private msg:MsgType={\n        message:'',\n        type:MsgTypes.BTP\n    };\n\n    constructor(type:MsgTypes, messageIdent?:string, message?:string) {\n        super(message);\n\n        \n        this.msg.type = type;\n        if (messageIdent){\n            this.msg.message = this.getTextBundle().getText(messageIdent);           \n        }\n        else if (message) {\n            this.msg.message = message;\n        }\n\n      }\n    \n    public getTextBundle() {\n        const bundle = new TextBundle(\"../i18n/i18n\", LocCache.getInstance().getValue('lang'));\n        return bundle;\n    }\n\n    public raiseServiceError(req:any){\n        req.reject(this.msg.type, this.msg.message);\n    }\n\n    public static raiseGeneralError(req:any,error:Error){\n        req.reject(MsgTypes.Backend, error.message);\n    }\n    \n}\n\nexport default ErrorHnd;"]}