{"version":3,"file":"server.js","sourceRoot":"","sources":["../src/server.ts"],"names":[],"mappings":"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","sourcesContent":["import cds from \"@sap/cds\";\nimport bodyParser from \"body-parser\";\nimport xsenv from \"@sap/xsenv\";\nimport xssec from \"@sap/xssec\";\nimport passport from \"passport\";\n\nimport lib from \"./library\";\nimport { initDB } from \"./utils/dbUtils\";\nimport httpClient from '@sap-cloud-sdk/http-client';\nimport { retrieveJwt } from '@sap-cloud-sdk/connectivity';\n\nconst LOG = cds.log('sql')\n\n\nconst services = xsenv.getServices({\n    uaa: { label: \"xsuaa\" },\n    registry: { label: \"saas-registry\" }\n    , dest: { label: 'destination' }\n\n});\n\n\ncds.on(\n    \"bootstrap\",\n\n    (app) => {\n        // // if (process.env.NODE_ENV === \"production\") {\n    passport.use(\"JWT\", new xssec.JWTStrategy(services.uaa));\n        app.use(passport.initialize());\n        app.use(\n            passport.authenticate(\"JWT\", {\n                session: false\n            })\n        );\n\n        // delete cds.env.requires['API_ENTERPRISE_PROJECT_SRV_0002'].credentials.destination;\n        // cds.env.requires['API_ENTERPRISE_PROJECT_SRV_0002'].credentials.url = 'https://my404308-api.s4hana.cloud.sap/sap/opu/odata/sap/API_ENTERPRISE_PROJECT_SRV;v=0002';\n        // cds.env.requires['API_ENTERPRISE_PROJECT_SRV_0002'].credentials.authentication = \"BasicAuthentication\";\n        // cds.env.requires['API_ENTERPRISE_PROJECT_SRV_0002'].credentials.username = \"ZRNDCOMMUNICATION\";\n        // cds.env.requires['API_ENTERPRISE_PROJECT_SRV_0002'].credentials.password = \"PprgsNygRpKh9TqWSvn\\YuNeSlsjmKQWQUWVcYJX\";\n\n\n        // // }\n\n        //app.use(bodyParser.json()); bug with this\n        // app.use(proxy());\n        initapi(app);\n    }\n);\n\nfunction initapi(app) {\n    // const services = xsenv.getServices({\n    //     uaa: { tag: 'xsuaa' },\n    //     registry: { tag: 'SaaS' }\n    //     ,dest: { tag: 'destination' }\n    // });\n\n    app.get(\"/user\", function (req, res) {\n        let info = { user: req.user };\n        return res.status(200).send(info);\n    });\n\n    // const app = express();\n\n    // subscribe/onboard a subscriber tenant\n    app.put(\"/callback/v1.0/tenants/*\", bodyParser.json(), async function (req, res) {\n        if (!req.authInfo.checkLocalScope(\"Callback\")) {\n            LOG.error(\"Forbidden: Subscribe requires Callback scope!\");\n            res.status(403).send(\"Forbidden\");\n            return;\n        }\n        let tenantURL = process.env.APP_PROTOCOL + \"://\" + req.body.subscribedSubdomain + \"-\" + process.env.APP_URI;\n        LOG.info(\"Subscribe:\", req.body.subscribedSubdomain, req.body.subscribedTenantId, tenantURL);\n\n        lib.createRoute(req.body.subscribedSubdomain, services.registry.appName + \"-app\").then(\n            async function (result) {\n                try {\n                    await initDB(req.body.subscribedTenantId);\n                } catch (error) {\n                    LOG.error(error.message);\n                }\n\n                res.status(200).send(tenantURL);\n            },\n            function (err) {\n                LOG.error(err.stack);\n                res.status(500).send(err.message);\n            }\n        );\n    });\n\n    // unsubscribe/offboard a subscriber tenant\n    app.delete(\"/callback/v1.0/tenants/*\", bodyParser.json(), function (req, res) {\n        if (!req.authInfo.checkLocalScope(\"Callback\")) {\n            LOG.error(\"Forbidden: Unsubscribe requires Callback scope!\");\n            res.status(403).send(\"Forbidden\");\n            return;\n        }\n        LOG.info(\"Unsubscribe:\", req.body.subscribedSubdomain, req.body.subscribedTenantId);\n        // delete route\n        lib.deleteRoute(req.body.subscribedSubdomain, services.registry.appName + \"-app\").then(\n            function (result) {\n                res.status(200).send(\"\");\n            },\n            function (err) {\n                LOG.error(err.stack);\n                res.status(500).send(err.message);\n            }\n        );\n    });\n\n    // get reuse service dependencies\n    app.get(\"/callback/v1.0/dependencies\", function (req, res) {\n        if (!req.authInfo.checkLocalScope('Callback')) {\n            console.log('Forbidden: Dependencies requires Callback scope!');\n            res.status(403).send('Forbidden');\n            return;\n        }\n        let dependencies = [{\n            'xsappname': services.dest.xsappname\n        }];\n\n        res.status(200).json(dependencies);\n    });\n\n    // app subscriptions\n    app.get(\"/srv/subscriptions\", function (req, res) {\n        if (req.authInfo.checkScope('$XSAPPNAME.Administrator')) {\n            lib.getSubscriptions(services.registry).then(\n                function (result) {\n                    res.status(200).json(result);\n                },\n                function (err) {\n                    console.log(err.stack);\n                    res.status(500).send(err.message);\n                });\n        } else {\n            res.status(403).send('Forbidden');\n        }\n    });\n\n    app.get(\"/srv/info\", function (req, res) {\n        if (req.authInfo.checkScope(\"$XSAPPNAME.User\")) {\n            let info = {\n                userInfo: req.user,\n                subdomain: req.authInfo.getSubdomain(),\n                tenantId: req.authInfo.getZoneId()\n            };\n            res.status(200).json(info);\n        } else {\n            res.status(403).send(\"Forbidden\");\n        }\n    });\n\n    app.post(\"/srv/initDB\", async function (req, res) {\n        try {\n            await initDB(req.tenant || req.authInfo.getSubaccountId());\n        } catch (error) {\n            res.status(500).send(error.message);\n        }\n    });\n\n    // // destination reuse service\n    app.get('/srv/destinations', async function (req, res) {\n        console.log('Retrive destinations!!!');\n\n        if (req.authInfo.checkScope('$XSAPPNAME.User')) {\n            try {\n                let res1 = await httpClient.executeHttpRequest(\n                    {\n                        destinationName: req.query.destination || '',\n                        jwt: retrieveJwt(req)\n                    },\n                    {\n                        method: 'GET',\n                        url: req.query.path || '/'\n                    }\n                );\n                res.status(200).json(res1.data);\n                console.log('Retrive destinations!!!:', res1.data);\n            } catch (err) {\n                console.log(err.stack);\n                res.status(500).send(err.message);\n                console.log('Retrive destinations!!!:', err.message);\n            }\n        } else {\n            res.status(403).send('Forbidden');\n        }\n        \n\n    });\n}\n\nmodule.exports = cds.server;\n"]}